{"version":3,"sources":["Components/ContactForm/ContactForm.js","Components/ContactList/Contact.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleInputChange","e","preventDefault","target","value","setState","handleSubmit","props","submitContactInfo","this","onSubmit","type","onChange","Component","Contact","id","deleteContact","onClick","ContactList","list","map","contact","key","Filter","onChangeFilter","className","App","contacts","filter","addContact","person","notyf","Notyf","shortid","generate","find","item","error","prevState","contactId","changeFilter","getVisibleContacts","toLowerCase","includes","visibleContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac351617.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport T from 'prop-types';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  propTypes = {\r\n    submitContactInfo: T.func.isRequired,\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.submitContactInfo(this.state.name, this.state.number);\r\n\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <h3>Name</h3>\r\n          <input\r\n            type=\"name\"\r\n            value={name}\r\n            onChange={this.handleInputChange}\r\n            name=\"name\"\r\n          />\r\n          <h3>Number</h3>\r\n          <input\r\n            type=\"number\"\r\n            value={number}\r\n            onChange={this.handleInputChange}\r\n            name=\"number\"\r\n          />\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport T from 'prop-types';\r\n\r\nfunction Contact({ name, number, id, deleteContact }) {\r\n  return (\r\n    <li>\r\n      {name}: {number}\r\n      <button type=\"button\" onClick={() => deleteContact(id)}>\r\n        Delete {name} from contact list\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  name: T.string.isRequired,\r\n  number: T.number.isRequired,\r\n  id: T.number.isRequired,\r\n  deleteContact: T.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport Contact from './Contact';\r\n\r\nfunction ContactList({ list, deleteContact }) {\r\n  return (\r\n    <ul>\r\n      {list.map(contact => (\r\n        <Contact\r\n          key={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n          deleteContact={deleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  list: T.arrayOf({}).isRequired,\r\n  deleteContact: T.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        className=\"TaskEditor-input\"\r\n        value={value}\r\n        onChange={e => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: T.string.isRequired,\r\n  onChangeFilter: T.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport { Notyf } from 'notyf';\r\nimport 'notyf/notyf.min.css';\r\nimport ContactForm from './Components/ContactForm/ContactForm';\r\nimport ContactList from './Components/ContactList/ContactList';\r\nimport Filter from './Components/Filter/Filter';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = (name, number) => {\r\n    const notyf = new Notyf();\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n    const findAddedContact = (contacts, person) =>\r\n      contacts.find(item => item.name === person);\r\n\r\n    if (findAddedContact(this.state.contacts, contact.name)) {\r\n      return notyf.error(`${contact.name} is already exists in contacts!`);\r\n    }\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: [...prevState.contacts, contact],\r\n      };\r\n    });\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm submitContactInfo={this.addContact} />\r\n        <h2>Contacts</h2>\r\n\r\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        <ContactList\r\n          list={visibleContacts}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}